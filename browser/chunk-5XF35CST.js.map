{
  "version": 3,
  "sources": ["src/app/core/services/theme.service.ts"],
  "sourcesContent": ["import { Injectable, signal } from '@angular/core';\nimport { Theme } from '../models/theme.model';\nimport { effect } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  public theme = signal<Theme>({ mode: 'dark', color: 'base' });\n\n  constructor() {\n    this.loadTheme();\n    effect(() => {\n      this.setTheme();\n    });\n  }\n\n  private loadTheme() {\n    const theme = localStorage.getItem('theme');\n    if (theme) {\n      this.theme.set(JSON.parse(theme));\n    }\n  }\n\n  private setTheme() {\n    localStorage.setItem('theme', JSON.stringify(this.theme()));\n    this.setThemeClass();\n  }\n\n  public get isDark(): boolean {\n    return this.theme().mode == 'dark';\n  }\n\n  private setThemeClass() {\n    document.querySelector('html')!.className = this.theme().mode;\n    document.querySelector('html')!.setAttribute('data-theme', this.theme().color);\n  }\n}\n"],
  "mappings": ";;;;;;;AAOM,IAAO,eAAP,MAAO,cAAY;EAGvB,cAAA;AAFO,SAAA,QAAQ,OAAc,EAAE,MAAM,QAAQ,OAAO,OAAM,CAAE;AAG1D,SAAK,UAAS;AACd,WAAO,MAAK;AACV,WAAK,SAAQ;IACf,CAAC;EACH;EAEQ,YAAS;AACf,UAAM,QAAQ,aAAa,QAAQ,OAAO;AAC1C,QAAI,OAAO;AACT,WAAK,MAAM,IAAI,KAAK,MAAM,KAAK,CAAC;IAClC;EACF;EAEQ,WAAQ;AACd,iBAAa,QAAQ,SAAS,KAAK,UAAU,KAAK,MAAK,CAAE,CAAC;AAC1D,SAAK,cAAa;EACpB;EAEA,IAAW,SAAM;AACf,WAAO,KAAK,MAAK,EAAG,QAAQ;EAC9B;EAEQ,gBAAa;AACnB,aAAS,cAAc,MAAM,EAAG,YAAY,KAAK,MAAK,EAAG;AACzD,aAAS,cAAc,MAAM,EAAG,aAAa,cAAc,KAAK,MAAK,EAAG,KAAK;EAC/E;;;uCA7BW,eAAY;IAAA;EAAA;;4EAAZ,eAAY,SAAZ,cAAY,WAAA,YAFX,OAAM,CAAA;EAAA;;",
  "names": []
}
