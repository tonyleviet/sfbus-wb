{
  "version": 3,
  "sources": ["src/app/shared/utils/ckassnames.ts", "src/app/shared/components/button/button.component.ts", "src/app/shared/components/button/button.component.html"],
  "sourcesContent": ["export function cx(...classes: string[]) {\n  return classes.filter(Boolean).join(' ');\n}\n", "import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, OnInit, Output, input } from '@angular/core';\nimport { cx } from '../../utils/ckassnames';\n\ntype ButtonProps = {\n  impact: 'bold' | 'light' | 'none';\n  size: 'small' | 'medium' | 'large';\n  shape: 'square' | 'rounded' | 'pill';\n  tone: 'primary' | 'danger' | 'success' | 'warning' | 'info' | 'light';\n  shadow: 'none' | 'small' | 'medium' | 'large';\n};\n\n@Component({\n  selector: 'app-button',\n  imports: [CommonModule],\n  templateUrl: './button.component.html',\n  styleUrl: './button.component.scss',\n})\nexport class ButtonComponent implements OnInit {\n  impact = input<ButtonProps['impact']>('none');\n  size = input<ButtonProps['size']>('medium');\n  shape = input<ButtonProps['shape']>('rounded');\n  tone = input<ButtonProps['tone']>('primary');\n  shadow = input<ButtonProps['shadow']>('none');\n  full = input(false, {\n    transform: (value: boolean | string) => (typeof value === 'string' ? value === '' : value),\n  });\n\n  @Output() buttonClick = new EventEmitter<void>();\n\n  public classes: string = '';\n\n  baseClasses =\n    'font-semibold focus-visible:outline-none flex items-center justify-center focus-visible:ring-2 focus-visible:ring-offset-2 active:translate-y-px disabled:pointer-events-none disabled:opacity-50';\n\n  impactClasses: Record<ButtonProps['tone'], Record<ButtonProps['impact'], string>> = {\n    primary: {\n      bold: 'bg-primary text-primary-foreground hover:bg-primary/90 focus-visible:ring-primary',\n      light: 'bg-primary/20 text-primary hover:bg-primary/30 focus-visible:ring-primary',\n      none: 'bg-transparent text-primary hover:bg-primary/10 focus-visible:ring-primary',\n    },\n    danger: {\n      bold: 'bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive',\n      light: 'bg-destructive/20 text-destructive hover:bg-destructive/30 focus-visible:ring-destructive',\n      none: 'bg-transparent text-destructive hover:bg-destructive/10 focus-visible:ring-destructive',\n    },\n    success: {\n      bold: 'bg-green-500 text-green-950 hover:bg-green-600 focus-visible:ring-green-500',\n      light: 'bg-green-500/20 text-green-600 hover:bg-green-500/30 focus-visible:ring-green-500',\n      none: 'bg-transparent text-green-600 hover:bg-green-500/10 focus-visible:ring-green-500',\n    },\n    warning: {\n      bold: 'bg-yellow-500 text-yellow-950 hover:bg-yellow-600 focus-visible:ring-yellow-500',\n      light: 'bg-yellow-500/20 text-yellow-600 hover:bg-yellow-500/30 focus-visible:ring-yellow-500',\n      none: 'bg-transparent text-yellow-600 hover:bg-yellow-500/10 focus-visible:ring-yellow-500',\n    },\n    info: {\n      bold: 'bg-violet-500 text-white hover:bg-violet-600 focus-visible:ring-violet-500',\n      light: 'bg-violet-500/20 text-violet-600 hover:bg-violet-500/30 focus-visible:ring-violet-500',\n      none: 'bg-transparent text-violet-600 hover:bg-violet-500/10 focus-visible:ring-violet-500',\n    },\n    light: {\n      bold: 'bg-muted text-muted-foreground hover:bg-muted/90 focus-visible:ring-muted',\n      light: 'bg-muted/20 text-muted-foreground hover:bg-muted focus-visible:ring-muted',\n      none: 'bg-transparent text-muted-foreground hover:bg-muted focus-visible:ring-muted',\n    },\n  };\n\n  sizeClasses: Record<ButtonProps['size'], string> = {\n    small: 'px-3 py-1 text-xs',\n    medium: 'px-5 py-2 text-sm',\n    large: 'px-7 py-2.5 text-lg',\n  };\n\n  shapeClasses: Record<ButtonProps['shape'], string> = {\n    square: 'rounded-none',\n    rounded: 'rounded-lg',\n    pill: 'rounded-full',\n  };\n\n  shadowClasses: Record<ButtonProps['shadow'], string> = {\n    none: '',\n    small: 'shadow-sm',\n    medium: 'shadow-md',\n    large: 'shadow-lg',\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.classes = cx(\n      this.baseClasses,\n      this.impactClasses[this.tone()][this.impact()],\n      this.sizeClasses[this.size()],\n      this.shapeClasses[this.shape()],\n      this.shadowClasses[this.shadow()],\n      this.full() ? 'w-full' : '',\n    );\n  }\n\n  onButtonClick() {\n    this.buttonClick.emit();\n  }\n}\n", "<button (click)=\"onButtonClick()\" [ngClass]=\"classes\">\n  <ng-content></ng-content>\n</button>\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAAM,SAAU,MAAM,SAAiB;AACrC,SAAO,QAAQ,OAAO,OAAO,EAAE,KAAK,GAAG;AACzC;;;;ACgBM,IAAO,kBAAP,MAAO,iBAAe;EAqE1B,cAAA;AApEA,SAAA,SAAS,MAA6B,MAAM;AAC5C,SAAA,OAAO,MAA2B,QAAQ;AAC1C,SAAA,QAAQ,MAA4B,SAAS;AAC7C,SAAA,OAAO,MAA2B,SAAS;AAC3C,SAAA,SAAS,MAA6B,MAAM;AAC5C,SAAA,OAAO,MAAM,OAAO;MAClB,WAAW,CAAC,UAA6B,OAAO,UAAU,WAAW,UAAU,KAAK;KACrF;AAES,SAAA,cAAc,IAAI,aAAY;AAEjC,SAAA,UAAkB;AAEzB,SAAA,cACE;AAEF,SAAA,gBAAoF;MAClF,SAAS;QACP,MAAM;QACN,OAAO;QACP,MAAM;;MAER,QAAQ;QACN,MAAM;QACN,OAAO;QACP,MAAM;;MAER,SAAS;QACP,MAAM;QACN,OAAO;QACP,MAAM;;MAER,SAAS;QACP,MAAM;QACN,OAAO;QACP,MAAM;;MAER,MAAM;QACJ,MAAM;QACN,OAAO;QACP,MAAM;;MAER,OAAO;QACL,MAAM;QACN,OAAO;QACP,MAAM;;;AAIV,SAAA,cAAmD;MACjD,OAAO;MACP,QAAQ;MACR,OAAO;;AAGT,SAAA,eAAqD;MACnD,QAAQ;MACR,SAAS;MACT,MAAM;;AAGR,SAAA,gBAAuD;MACrD,MAAM;MACN,OAAO;MACP,QAAQ;MACR,OAAO;;EAGM;EAEf,WAAQ;AACN,SAAK,UAAU,GACb,KAAK,aACL,KAAK,cAAc,KAAK,KAAI,CAAE,EAAE,KAAK,OAAM,CAAE,GAC7C,KAAK,YAAY,KAAK,KAAI,CAAE,GAC5B,KAAK,aAAa,KAAK,MAAK,CAAE,GAC9B,KAAK,cAAc,KAAK,OAAM,CAAE,GAChC,KAAK,KAAI,IAAK,WAAW,EAAE;EAE/B;EAEA,gBAAa;AACX,SAAK,YAAY,KAAI;EACvB;;;uCApFW,kBAAe;IAAA;EAAA;;yEAAf,kBAAe,WAAA,CAAA,CAAA,YAAA,CAAA,GAAA,QAAA,EAAA,QAAA,CAAA,GAAA,QAAA,GAAA,MAAA,CAAA,GAAA,MAAA,GAAA,OAAA,CAAA,GAAA,OAAA,GAAA,MAAA,CAAA,GAAA,MAAA,GAAA,QAAA,CAAA,GAAA,QAAA,GAAA,MAAA,CAAA,GAAA,MAAA,EAAA,GAAA,SAAA,EAAA,aAAA,cAAA,GAAA,oBAAA,KAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,SAAA,SAAA,CAAA,GAAA,UAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;AClB5B,QAAA,yBAAA,GAAA,UAAA,CAAA;AAAQ,QAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,iBAAS,IAAA,cAAA;QAAe,CAAA;AAC9B,QAAA,uBAAA,CAAA;AACF,QAAA,uBAAA;;;AAFkC,QAAA,qBAAA,WAAA,IAAA,OAAA;;sBDctB,cAAY,OAAA,GAAA,eAAA,EAAA,CAAA;EAAA;;;6EAIX,iBAAe,EAAA,WAAA,mBAAA,UAAA,wDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
