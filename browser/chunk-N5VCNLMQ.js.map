{
  "version": 3,
  "sources": ["src/app/modules/auth/service/auth.service.ts"],
  "sourcesContent": ["import { Injectable } from \"@angular/core\";\nimport * as _ from \"lodash\";\nimport { from, of } from \"rxjs\";\nimport { catchError, delay, map, mergeMap, switchMap, tap } from \"rxjs/operators\";\nimport { ApiGatewayService } from \"src/app/api-gateway/api-gateaway.service\";\nimport { CredentialService } from \"src/app/shared/services/credential.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  constructor(\n    private apiGatewayService: ApiGatewayService,\n    private credentialService: CredentialService\n  ) { }\n\n\n  login(phoneNumber: string, password: string) {\n    const user = {\n      phoneNumber,\n      password\n    }\n    const url = `/auth/login?phoneNumber=${phoneNumber}`;\n    return this.apiGatewayService.post(url, user).pipe(\n      switchMap((res: any) => {\n        if (res) {\n          return from(this.credentialService.setToken(res.access_token)).pipe(\n            switchMap(() => this.getCurrentUser()),\n            switchMap((user: any) => {\n              if (user) {\n                return from(this.credentialService.setCurrentUser(user)).pipe(\n                  map(() => user)\n                );\n              }\n              return of(null);\n            })\n          );\n        }\n        return of(null);\n      }),\n      catchError((error) => {\n        //write log\n        return of(error.error);\n      }),\n    );\n  }\n\n  register(phoneNumber: string, name: string) {\n    const url = `/users/register`;\n    const user = {\n      phoneNumber,\n      name,\n      password: 'password123',\n      isTempPassWord: true\n    }\n    return this.apiGatewayService.post(url, user).pipe(\n      tap((res: any) => {\n      }),\n      map((res: any) => {\n        return res;\n      }),\n      catchError((err) => {\n        //write log\n        return of(err.error);\n      }),\n    );\n  }\n\n\n  async logout() {\n    await this.credentialService.removeToken();\n    await this.credentialService.removeCurrentUser();\n  }\n\n  getCurrentUser() {\n    const url = `/users/get-current-user`\n    return this.apiGatewayService.get(url).pipe(\n      tap((res: any) => {\n      }),\n      map((res: any) => {\n        return res;\n      }),\n      catchError((error) => {\n        //write log\n        return of(error.error);\n      }),\n    );\n  }\n\n  updatePassword(password: string) {\n    const user = {\n      password,\n      isTempPassWord: true\n    }\n    const url = `/users/update-password`\n    return this.apiGatewayService.post(url, user).pipe(\n      tap((res: any) => {\n      }),\n      map((res: any) => {\n        return res;\n      }),\n      catchError((error) => {\n        //write log\n        return of(error.error);\n      }),\n    );\n  }\n\n  updateUser(user: any) {\n    const userToUpdate = {\n      name: user.name,\n      addresses: user.addresses,\n      email: user.email,\n      gender: user.gender,\n      birthdate: user.birthdate,\n    }\n    const url = `/users/profile`\n    return this.apiGatewayService.put(url, userToUpdate).pipe(\n      tap((res: any) => {\n      }),\n      map((res: any) => {\n        return res;\n      }),\n      catchError((error) => {\n        //write log\n        return of(error.error);\n      }),\n    );\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAUM,IAAO,cAAP,MAAO,aAAW;EACtB,YACU,mBACA,mBAAoC;AADpC,SAAA,oBAAA;AACA,SAAA,oBAAA;EACN;EAGJ,MAAM,aAAqB,UAAgB;AACzC,UAAM,OAAO;MACX;MACA;;AAEF,UAAM,MAAM,2BAA2B,WAAW;AAClD,WAAO,KAAK,kBAAkB,KAAK,KAAK,IAAI,EAAE,KAC5C,UAAU,CAAC,QAAY;AACrB,UAAI,KAAK;AACP,eAAO,KAAK,KAAK,kBAAkB,SAAS,IAAI,YAAY,CAAC,EAAE,KAC7D,UAAU,MAAM,KAAK,eAAc,CAAE,GACrC,UAAU,CAACA,UAAa;AACtB,cAAIA,OAAM;AACR,mBAAO,KAAK,KAAK,kBAAkB,eAAeA,KAAI,CAAC,EAAE,KACvD,IAAI,MAAMA,KAAI,CAAC;UAEnB;AACA,iBAAO,GAAG,IAAI;QAChB,CAAC,CAAC;MAEN;AACA,aAAO,GAAG,IAAI;IAChB,CAAC,GACD,WAAW,CAAC,UAAS;AAEnB,aAAO,GAAG,MAAM,KAAK;IACvB,CAAC,CAAC;EAEN;EAEA,SAAS,aAAqB,MAAY;AACxC,UAAM,MAAM;AACZ,UAAM,OAAO;MACX;MACA;MACA,UAAU;MACV,gBAAgB;;AAElB,WAAO,KAAK,kBAAkB,KAAK,KAAK,IAAI,EAAE,KAC5C,IAAI,CAAC,QAAY;IACjB,CAAC,GACD,IAAI,CAAC,QAAY;AACf,aAAO;IACT,CAAC,GACD,WAAW,CAAC,QAAO;AAEjB,aAAO,GAAG,IAAI,KAAK;IACrB,CAAC,CAAC;EAEN;EAGM,SAAM;;AACV,YAAM,KAAK,kBAAkB,YAAW;AACxC,YAAM,KAAK,kBAAkB,kBAAiB;IAChD;;EAEA,iBAAc;AACZ,UAAM,MAAM;AACZ,WAAO,KAAK,kBAAkB,IAAI,GAAG,EAAE,KACrC,IAAI,CAAC,QAAY;IACjB,CAAC,GACD,IAAI,CAAC,QAAY;AACf,aAAO;IACT,CAAC,GACD,WAAW,CAAC,UAAS;AAEnB,aAAO,GAAG,MAAM,KAAK;IACvB,CAAC,CAAC;EAEN;EAEA,eAAe,UAAgB;AAC7B,UAAM,OAAO;MACX;MACA,gBAAgB;;AAElB,UAAM,MAAM;AACZ,WAAO,KAAK,kBAAkB,KAAK,KAAK,IAAI,EAAE,KAC5C,IAAI,CAAC,QAAY;IACjB,CAAC,GACD,IAAI,CAAC,QAAY;AACf,aAAO;IACT,CAAC,GACD,WAAW,CAAC,UAAS;AAEnB,aAAO,GAAG,MAAM,KAAK;IACvB,CAAC,CAAC;EAEN;EAEA,WAAW,MAAS;AAClB,UAAM,eAAe;MACnB,MAAM,KAAK;MACX,WAAW,KAAK;MAChB,OAAO,KAAK;MACZ,QAAQ,KAAK;MACb,WAAW,KAAK;;AAElB,UAAM,MAAM;AACZ,WAAO,KAAK,kBAAkB,IAAI,KAAK,YAAY,EAAE,KACnD,IAAI,CAAC,QAAY;IACjB,CAAC,GACD,IAAI,CAAC,QAAY;AACf,aAAO;IACT,CAAC,GACD,WAAW,CAAC,UAAS;AAEnB,aAAO,GAAG,MAAM,KAAK;IACvB,CAAC,CAAC;EAEN;;;uCAtHW,cAAW,mBAAA,iBAAA,GAAA,mBAAA,iBAAA,CAAA;IAAA;EAAA;;4EAAX,cAAW,SAAX,aAAW,WAAA,YAFV,OAAM,CAAA;EAAA;;",
  "names": ["user"]
}
